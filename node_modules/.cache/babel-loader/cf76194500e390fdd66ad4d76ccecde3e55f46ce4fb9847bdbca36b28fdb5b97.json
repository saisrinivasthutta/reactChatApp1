{"ast":null,"code":"var _jsxFileName = \"/home/chatapp/src/components/Home/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport InputEmoji from \"react-input-emoji\";\nimport uuid from \"react-uuid\";\nimport MessageItem from \"../MessageItem\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userNames = [\"Alan\", \"Bob\", \"Carol\", \"Dean\", \"Elin\"];\nconst Home = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const addMessages = e => {\n    const currentUserName = userNames[Math.floor(Math.random() * 4)];\n    setMessages(prev => [...prev, {\n      message: text,\n      user: currentUserName,\n      id: uuid()\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"head\",\n      children: \"React Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(MessageItem, {\n        messageObject: message,\n        id: message.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(InputEmoji, {\n        value: text,\n        onChange: setText,\n        onEnter: addMessages,\n        cleanOnEnter: true,\n        placeholder: \"Type a message\",\n        keepOpened: true,\n        background: \"transparent\",\n        borderColor: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"LX8UZwEFoh0cqXlYFO9T/GBnPCs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","InputEmoji","uuid","MessageItem","jsxDEV","_jsxDEV","userNames","Home","_s","text","setText","messages","setMessages","addMessages","e","currentUserName","Math","floor","random","prev","message","user","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","messageObject","value","onChange","onEnter","cleanOnEnter","placeholder","keepOpened","background","borderColor","_c","$RefreshReg$"],"sources":["/home/chatapp/src/components/Home/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport InputEmoji from \"react-input-emoji\";\nimport uuid from \"react-uuid\";\n\nimport MessageItem from \"../MessageItem\";\n\nimport \"./index.css\";\n\nconst userNames = [\"Alan\", \"Bob\", \"Carol\", \"Dean\", \"Elin\"];\n\nconst Home = () => {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const addMessages = (e) => {\n    const currentUserName = userNames[Math.floor(Math.random() * 4)];\n    setMessages((prev) => [\n      ...prev,\n      { message: text, user: currentUserName, id: uuid() },\n    ]);\n  };\n\n  return (\n    <div className=\"home-container\">\n      <h1 className=\"head\">React Chat App</h1>\n      <div className=\"messages-container\">\n        {messages.map((message) => (\n          <MessageItem messageObject={message} id={message.id} />\n        ))}\n        <InputEmoji\n          value={text}\n          onChange={setText}\n          onEnter={addMessages}\n          cleanOnEnter\n          placeholder=\"Type a message\"\n          keepOpened\n          background=\"transparent\"\n          borderColor=\"black\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,IAAI,MAAM,YAAY;AAE7B,OAAOC,WAAW,MAAM,gBAAgB;AAExC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,SAAS,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,WAAW,GAAIC,CAAC,IAAK;IACzB,MAAMC,eAAe,GAAGT,SAAS,CAACU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChEN,WAAW,CAAEO,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;MAAEC,OAAO,EAAEX,IAAI;MAAEY,IAAI,EAAEN,eAAe;MAAEO,EAAE,EAAEpB,IAAI,CAAC;IAAE,CAAC,CACrD,CAAC;EACJ,CAAC;EAED,oBACEG,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAIkB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCvB,OAAA;MAAKkB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAChCb,QAAQ,CAACkB,GAAG,CAAET,OAAO,iBACpBf,OAAA,CAACF,WAAW;QAAC2B,aAAa,EAAEV,OAAQ;QAACE,EAAE,EAAEF,OAAO,CAACE;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACvD,CAAC,eACFvB,OAAA,CAACJ,UAAU;QACT8B,KAAK,EAAEtB,IAAK;QACZuB,QAAQ,EAAEtB,OAAQ;QAClBuB,OAAO,EAAEpB,WAAY;QACrBqB,YAAY;QACZC,WAAW,EAAC,gBAAgB;QAC5BC,UAAU;QACVC,UAAU,EAAC,aAAa;QACxBC,WAAW,EAAC;MAAO;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAhCID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}